{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Revythis/olympiacos-next/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [isLoginModalOpen, setIsLoginModalOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const initializeAuth = () => {\r\n      const token = localStorage.getItem('token');\r\n      const user = localStorage.getItem('user');\r\n\r\n      if (token && user && user !== 'undefined') {\r\n        try {\r\n          const parsedUser = JSON.parse(user);\r\n          setCurrentUser(parsedUser);\r\n          console.log('User loaded from localStorage:', parsedUser);\r\n        } catch (error) {\r\n          console.error('Error parsing user from localStorage:', error);\r\n          localStorage.removeItem('user');\r\n          setCurrentUser(null);\r\n        }\r\n      } else {\r\n        console.log('No valid token or user found, showing login modal');\r\n        setIsLoginModalOpen(true);\r\n      }\r\n    };\r\n\r\n    initializeAuth();\r\n  }, []);\r\n\r\n  const login = async (token) => {\r\n    localStorage.setItem('token', token);\r\n    try {\r\n      const response = await axios.get('/api/check-login', {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n\r\n      if (response.data && response.data.loggedIn) {\r\n        const userData = response.data.user;\r\n        setCurrentUser(userData);\r\n        localStorage.setItem('user', JSON.stringify(userData));\r\n        console.log('User logged in:', userData);\r\n        setIsLoginModalOpen(false);\r\n      } else {\r\n        localStorage.removeItem('token');\r\n        setIsLoginModalOpen(true);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during login:', error);\r\n      localStorage.removeItem('token');\r\n      setIsLoginModalOpen(true);\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      const response = await axios.post('/api/logout');\r\n      if (response.data.message === 'Logout successful') {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('user');\r\n        setCurrentUser(null);\r\n        alert('Logged out successfully.');\r\n        setIsLoginModalOpen(true);\r\n      } else {\r\n        alert('Error during logout.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during logout:', error);\r\n      alert('Error during logout: ' + error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ currentUser, setCurrentUser, login, logout, isLoginModalOpen, setIsLoginModalOpen }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);"],"names":[],"mappings":";;;;;AAAA;AACA;;;;;;;;AAEA,MAAM,4BAAc,CAAA,GAAA,mGAAA,CAAA,gBAAa,AAAD;AAEzB,MAAM,eAAe,CAAC,EAAE,QAAQ,EAAE;IACvC,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAE;IAEzD,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,iBAAiB;YACrB,MAAM,QAAQ,aAAa,OAAO,CAAC;YACnC,MAAM,OAAO,aAAa,OAAO,CAAC;YAElC,IAAI,SAAS,QAAQ,SAAS,aAAa;gBACzC,IAAI;oBACF,MAAM,aAAa,KAAK,KAAK,CAAC;oBAC9B,eAAe;oBACf,QAAQ,GAAG,CAAC,kCAAkC;gBAChD,EAAE,OAAO,OAAO;oBACd,QAAQ,KAAK,CAAC,yCAAyC;oBACvD,aAAa,UAAU,CAAC;oBACxB,eAAe;gBACjB;YACF,OAAO;gBACL,QAAQ,GAAG,CAAC;gBACZ,oBAAoB;YACtB;QACF;QAEA;IACF,GAAG,EAAE;IAEL,MAAM,QAAQ,OAAO;QACnB,aAAa,OAAO,CAAC,SAAS;QAC9B,IAAI;YACF,MAAM,WAAW,MAAM,0GAAA,CAAA,UAAK,CAAC,GAAG,CAAC,oBAAoB;gBACnD,SAAS;oBAAE,eAAe,CAAC,OAAO,EAAE,OAAO;gBAAC;YAC9C;YAEA,IAAI,SAAS,IAAI,IAAI,SAAS,IAAI,CAAC,QAAQ,EAAE;gBAC3C,MAAM,WAAW,SAAS,IAAI,CAAC,IAAI;gBACnC,eAAe;gBACf,aAAa,OAAO,CAAC,QAAQ,KAAK,SAAS,CAAC;gBAC5C,QAAQ,GAAG,CAAC,mBAAmB;gBAC/B,oBAAoB;YACtB,OAAO;gBACL,aAAa,UAAU,CAAC;gBACxB,oBAAoB;YACtB;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,uBAAuB;YACrC,aAAa,UAAU,CAAC;YACxB,oBAAoB;QACtB;IACF;IAEA,MAAM,SAAS;QACb,IAAI;YACF,MAAM,WAAW,MAAM,0GAAA,CAAA,UAAK,CAAC,IAAI,CAAC;YAClC,IAAI,SAAS,IAAI,CAAC,OAAO,KAAK,qBAAqB;gBACjD,aAAa,UAAU,CAAC;gBACxB,aAAa,UAAU,CAAC;gBACxB,eAAe;gBACf,MAAM;gBACN,oBAAoB;YACtB,OAAO;gBACL,MAAM;YACR;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,wBAAwB;YACtC,MAAM,0BAA0B,MAAM,OAAO;QAC/C;IACF;IAEA,qBACE,qKAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAa;YAAgB;YAAO;YAAQ;YAAkB;QAAoB;kBAC9G;;;;;;AAGP;AAEO,MAAM,UAAU,IAAM,CAAA,GAAA,mGAAA,CAAA,aAAU,AAAD,EAAE"}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 147, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/Revythis/olympiacos-next/pages/_app.js"],"sourcesContent":["import { useEffect } from 'react';\r\nimport { AuthProvider } from '../context/AuthContext'; // Adjust the path if necessary\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport '../styles/home.css'; // Ensure your custom styles are imported after Bootstrap\r\n\r\nfunction MyApp({ Component, pageProps }) {\r\n  useEffect(() => {\r\n    // Conditionally import Bootstrap JavaScript only on the client side\r\n    if (typeof window !== 'undefined') {\r\n      import('bootstrap/dist/js/bootstrap.bundle.min.js').catch(error => console.error('Error loading Bootstrap JS:', error));\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <AuthProvider>\r\n      <Component {...pageProps} />\r\n      <ToastContainer />\r\n    </AuthProvider>\r\n  );\r\n}\r\n\r\nexport default MyApp;"],"names":[],"mappings":";;;;AAAA;AACA,mMAAuD,+BAA+B;AAEtF;;;;;;;;;;;;;AAIA,SAAS,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE;IACrC,CAAA,GAAA,mGAAA,CAAA,YAAS,AAAD,EAAE;QACR,oEAAoE;QACpE,uCAAmC;;QAEnC;IACF,GAAG,EAAE;IAEL,qBACE,qKAAC,+GAAA,CAAA,eAAY;;0BACX,qKAAC;gBAAW,GAAG,SAAS;;;;;;0BACxB,qKAAC,kIAAA,CAAA,iBAAc;;;;;;;;;;;AAGrB;uCAEe"}},
    {"offset": {"line": 195, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}